---
import "../css/Navbar.css"
import { DarkMoon } from "./icons/DarkMoon"
import { LightSun } from "./icons/LightSun"
import { DraftIcon } from "./icons/DraftIcon"
import { MenuIcon } from "./icons/MenuIcon"

interface Link {
  name: string
  url: string
}

const links: Link[] = [
  {
    name: "Draft App",
    url: "/app",
  },
]
---

<nav
  class="bg-white border-gray-200 px-2 py-4 xl:w-full dark:bg-gray-900 navbar"
>
  <div class="flex flex-wrap items-center nav-mobile mx-auto">
    <div class="flex flex-row gap-4">
      <a
        href="/"
        id="d"
        class="flex items-center text-dark dark:text-white dark:hover:text-blue-500 hover:text-blue-500"
      >
        <DraftIcon />
        <span
          class="self-center text-xl font-semibold whitespace-nowrap dark:text-white"
          >Draft.ia</span
        >
      </a>
      <button
        class="theme dark:text-white hover:text-blue-500 dark:hover:text-blue-500 transition-all"
      >
        <DarkMoon id="button-dark" />
        <LightSun id="button-light" />
      </button>
    </div>
    <div class="mobile-theme">
      <button
        data-collapse-toggle="navbar-default"
        type="button"
        class="nav-burger inline-flex items-center p-2 ml-3 text-sm text-gray-500 rounded-lg md:hidden hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-gray-200 dark:text-gray-400 dark:hover:bg-gray-700 dark:focus:ring-gray-600"
        aria-controls="navbar-default"
        aria-expanded="false"
      >
        <span class="sr-only">Open main menu</span>
        <MenuIcon />
      </button>
    </div>

    <div
      class="hidden mobile-menu w-full md:flex md:items-center md:w-auto justify-center align-middle"
      id="menu"
    >
      <ul
        class="text-base flex items-center flex-col text-gray-700 pt-4 md:flex md:justify-between md:pt-0"
      >
        {
          links.map((link) => (
            <li>
              <a
                href={link.url}
                class="py-4 text-xl pl-3 pr-4 text-gray-700 rounded hover:bg-gray-100 md:hover:bg-transparent hover-underline-animation md:p-0 dark:text-gray-400 md:dark:hover:text-white dark:hover:bg-gray-700 dark:hover:text-white md:dark:hover:bg-transparent"
              >
                {link.name}
              </a>
            </li>
          ))
        }
      </ul>
    </div>
    <div class="hidden w-full md:block md:w-auto" id="navbar-default">
      <ul
        class="flex flex-col p-4 mt-4 border border-gray-100 rounded-lg bg-gray-50 md:flex-row md:space-x-8 md:mt-0 md:text-sm md:font-medium md:border-0 md:bg-white dark:bg-gray-800 md:dark:bg-gray-900 dark:border-gray-700"
      >
        {
          links.map((link) => (
            <li>
              <a
                href={link.url}
                class="block py-2 text-xl pl-3 pr-4 text-gray-700 rounded hover:bg-gray-100 md:hover:bg-transparent hover-underline-animation  md:p-0 dark:text-gray-400 md:dark:hover:text-white dark:hover:bg-gray-700 dark:hover:text-white md:dark:hover:bg-transparent"
              >
                {link.name}
              </a>
            </li>
          ))
        }
      </ul>
    </div>
  </div>
</nav>

<style>
  li {
    list-style: none;
  }

  @media (max-width: 765px) {
    .nav-mobile {
      display: flex;
      justify-content: space-between;
    }
  }

  @media (min-width: 765px) {
    .mobile-menu {
      display: none;
    }
    .mobile-theme {
      display: none;
    }

    .nav-mobile {
      justify-content: space-around;
    }
  }
</style>

<script>
  const btnNav = document.querySelector(".nav-burger")
  const menu = document.querySelector(".mobile-menu")
  const btnTheme = document.querySelector(".theme")
  const btnDark = document.getElementById("button-dark")
  const btnLight = document.getElementById("button-light")

  btnDark.classList.toggle("hidden")
  btnLight.classList.toggle("hidden")

  btnNav.addEventListener("click", () => {
    menu.classList.toggle("hidden")
  })

  btnTheme.addEventListener("click", () => {
    if (localStorage.getItem("color-theme")) {
      if (localStorage.getItem("color-theme") === "light") {
        btnLight.classList.toggle("hidden")
        btnDark.classList.toggle("hidden")
        document.documentElement.style.backgroundColor = "#1e293b"
        document.documentElement.style.setProperty("--bg-color", "#1e293b")
        document.documentElement.classList.add("dark")
        localStorage.setItem("color-theme", "dark")
      } else {
        document.documentElement.classList.remove("dark")
        document.documentElement.style.backgroundColor = "#f6f6f6"
        document.documentElement.style.setProperty("--bg-color", "#f6f6f6")
        btnLight.classList.toggle("hidden")
        btnDark.classList.toggle("hidden")
        localStorage.setItem("color-theme", "light")
      }

      // if NOT set via local storage previously
    } else {
      if (document.documentElement.classList.contains("dark")) {
        document.documentElement.classList.remove("dark")
        document.documentElement.style.backgroundColor = "#f6f6f6"
        document.documentElement.style.setProperty("--bg-color", "#f6f6f6")
        btnLight.classList.toggle("hidden")
        btnDark.classList.toggle("hidden")
        localStorage.setItem("color-theme", "light")
      } else {
        btnLight.classList.toggle("hidden")
        btnDark.classList.toggle("hidden")
        document.documentElement.style.backgroundColor = "#1e293b"
        document.documentElement.style.setProperty("--bg-color", "#1e293b")
        document.documentElement.classList.add("dark")
        localStorage.setItem("color-theme", "dark")
      }
    }
  })
</script>
